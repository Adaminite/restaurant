(()=>{"use strict";var e={247:(e,n,t)=>{t.d(n,{Z:()=>c});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([e.id,"*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n}\n/* Nav Styling */\n#nav{\n    display: flex;\n    justify-content: center;\n    gap: calc(20px + 2vw);\n    margin: 10px;\n\n\n    width: 100vw;\n}\n\nbutton{\n    background-color: white;\n    border: 2px solid black;\n    border-radius: 5px;\n    padding: 5px;\n}\n\n/* Home Styling */\n\n#home{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n.home-img{\n    display: block;\n    margin: 10px;\n\n    flex: 0 0 auto;\n    width: 500px;\n    height: auto;\n}\n\n#hours{\n    text-align: center;\n    margin: 10px;\n    \n    border: 2px solid black;\n\n    width: 500px;\n    font-size: calc(12px + 1vw);\n}\n\n#home-header{\n    font-size: 40px;\n    margin: 10px;\n    text-align: center;\n}\n\nul{\n    list-style-type: none;\n}\n\n\n.menu-img{\n    display: block;\n}\n\n/* Menu Styling */\n\n\n/* Contact Styling */\n","",{version:3,sources:["webpack://./styles/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;;AAEvB;AACA,gBAAgB;AAChB;IACI,aAAa;IACb,uBAAuB;IACvB,qBAAqB;IACrB,YAAY;;;IAGZ,YAAY;AAChB;;AAEA;IACI,uBAAuB;IACvB,uBAAuB;IACvB,kBAAkB;IAClB,YAAY;AAChB;;AAEA,iBAAiB;;AAEjB;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;AACA;IACI,cAAc;IACd,YAAY;;IAEZ,cAAc;IACd,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,YAAY;;IAEZ,uBAAuB;;IAEvB,YAAY;IACZ,2BAA2B;AAC/B;;AAEA;IACI,eAAe;IACf,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;AACzB;;;AAGA;IACI,cAAc;AAClB;;AAEA,iBAAiB;;;AAGjB,oBAAoB",sourcesContent:["*{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n}\n/* Nav Styling */\n#nav{\n    display: flex;\n    justify-content: center;\n    gap: calc(20px + 2vw);\n    margin: 10px;\n\n\n    width: 100vw;\n}\n\nbutton{\n    background-color: white;\n    border: 2px solid black;\n    border-radius: 5px;\n    padding: 5px;\n}\n\n/* Home Styling */\n\n#home{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n.home-img{\n    display: block;\n    margin: 10px;\n\n    flex: 0 0 auto;\n    width: 500px;\n    height: auto;\n}\n\n#hours{\n    text-align: center;\n    margin: 10px;\n    \n    border: 2px solid black;\n\n    width: 500px;\n    font-size: calc(12px + 1vw);\n}\n\n#home-header{\n    font-size: 40px;\n    margin: 10px;\n    text-align: center;\n}\n\nul{\n    list-style-type: none;\n}\n\n\n.menu-img{\n    display: block;\n}\n\n/* Menu Styling */\n\n\n/* Contact Styling */\n"],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var l=this[c][0];null!=l&&(i[l]=!0)}for(var s=0;s<e.length;s++){var d=[].concat(e[s]);r&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),n.push(d))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},i=[],c=0;c<e.length;c++){var l=e[c],s=r.base?l[0]+r.base:l[0],d=a[s]||0,u="".concat(s," ").concat(d);a[s]=d+1;var p=t(u),A={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)n[p].references++,n[p].updater(A);else{var m=o(A,r);r.byIndex=c,n.splice(c,0,{identifier:u,updater:m,references:1})}i.push(u)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=t(a[i]);n[c].references--}for(var l=r(e,o),s=0;s<a.length;s++){var d=t(a[s]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}a=l}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},139:(e,n,t)=>{e.exports=t.p+"e40fbf4862e40df5b1d7.jpeg"}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),(()=>{var e=t(139),n=t(379),r=t.n(n),o=t(795),a=t.n(o),i=t(569),c=t.n(i),l=t(565),s=t.n(l),d=t(216),u=t.n(d),p=t(589),A=t.n(p),m=t(247),f={};f.styleTagTransform=A(),f.setAttributes=s(),f.insert=c().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=u(),r()(m.Z,f),m.Z&&m.Z.locals&&m.Z.locals;const h=function(){let n=document.createElement("div");return n.id="home",n.appendChild(function(){let e=document.createElement("h1");return e.textContent="Omar's Kabob House",e.id="home-header",e}()),n.appendChild(function(){let n=document.createElement("img");return n.setAttribute("src",e),n.setAttribute("alt","A picture of our chicken kabob"),n.classList.add("home-img"),n}()),n.appendChild(function(){let e=document.createElement("div");e.id="hours";let n=document.createElement("h2");n.textContent="Hours",e.appendChild(n);let t=document.createElement("ul");const r=["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"];for(let e of r){let n=document.createElement("li");n.textContent=e,n.textContent+="Sunday"===e?": Closed":"Saturday"===e?": 10:00am - 3:00pm":": 9:00am - 5:00pm",t.appendChild(n)}return e.appendChild(t),e}()),n},g=function(){let e=document.createElement("div");return e.id="contact",e.appendChild(function(){let e=document.createElement("h1");return e.textContent="Contact Us",e}()),e};function C(e,n,t,r){return{getName:()=>e,getPrice:()=>"$"+n,getSrc:()=>t,getDesc:()=>r}}const b=(()=>{let n=[];return{compileEntrees:()=>{n.push(C("Chicken Kabob",10.99,"#","A South Asian and mediteranian classic. 4 pieces of perfectly grilled marinated chicken served with salad and a choice of white/brown rice.")),n.push(C("Kofta Kabob",10.99,"#","Our most popular item. 2 pieces of skewered beef kabob served with salad and a choice of white/brown rice.")),n.push(C("Chicken Seekh Kabob",10.99,"#","A different take on the chicken kabob. 2 pieces skewered chicken infused with peppers, onions, and spices. Served with naan bread and lentils")),n.push(C("Lamb Kabob",13.99,"#","A true delicacy. 4 pieces of Halal, grass-fed, marinated lamb served with a choice of naan bread/rice and salad/lentils"));let t=document.createElement("div"),r=document.createElement("h2");r.textContent="Entrees",t.appendChild(r);for(let r of n){let n=document.createElement("div"),o=document.createElement("h3");o.textContent=r.getName()+"  "+r.getPrice();let a=document.createElement("img");a.setAttribute("src",e),a.classList.add("menu-img");let i=document.createElement("p");i.textContent=r.getDesc(),n.appendChild(o),n.appendChild(a),n.appendChild(i),t.appendChild(n)}return t}}})(),v=function(){let e=document.createElement("div");return e.id="menu",e.appendChild(function(){let e=document.createElement("h1");return e.textContent="Menu",e}()),e.appendChild(b.compileEntrees()),e};(()=>{let e=document.getElementById("content"),n="";const t={Home:h(),Contact:g(),Menu:v()},r=r=>{let o=r.target.textContent;o!==n&&(e.removeChild(e.lastElementChild),e.appendChild(t[o]),n=o)};return{renderLanding:()=>{e.appendChild((()=>{let e=document.createElement("div");e.id="nav";const n=["Home","Menu","Contact"];for(let t of n){let n=document.createElement("button");n.textContent=t,n.addEventListener("click",r),e.appendChild(n)}return e})()),e.appendChild(h()),n="Home"}}})().renderLanding()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,